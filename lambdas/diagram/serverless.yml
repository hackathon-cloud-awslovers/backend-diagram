org: salvadordonayre
service: hack-diagram-service2

provider:
  name: aws
  runtime: python3.9
  region: us-east-1
  stage: dev
  iam:
    role: arn:aws:iam::268852202968:role/LabRole
  environment:
    auth_lambda: ${self:custom.auth_lambda}
    TABLE_DIAGRAM: ${self:custom.tableDiagram}
    S3_BUCKET_DIAGRAM: ${self:custom.S3_BUCKET_DIAGRAM}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:PutObject
        - s3:GetObject
        - s3:DeleteObject
      Resource: arn:aws:s3:::${self:custom.S3_BUCKET_DIAGRAM}/*

custom:
  tableDiagram: d_diagrams_${sls:stage}
  auth_lambda: hack-user-service-${sls:stage}-user_validat
  S3_BUCKET_DIAGRAM: d-diagrams-s3-${sls:stage}

resources:
  Resources:
    DiagramTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tableDiagram}
        AttributeDefinitions:
          - AttributeName: tenant_id
            AttributeType: S
          - AttributeName: diagram_id
            AttributeType: S
        KeySchema:
          - AttributeName: tenant_id
            KeyType: HASH
          - AttributeName: diagram_id
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST

    DiagramS3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.S3_BUCKET_DIAGRAM}
        VersioningConfiguration:
          Status: Enabled
        LifecycleConfiguration:
          Rules:
            - Id: "ExpireOldDiagrams"
              Status: Enabled
              ExpirationInDays: 365

functions:

  diagram_upload:
    handler: diagram_upload.lambda_handler
    events:
      - http:
          path: "diagram/upload"
          method: post
          cors: true
          integration: lambda
    package:
      include:
        - diagram_upload.py
        - utils.py

  diagram_url_upload:
    handler: diagram_url_upload.lambda_handler
    events:
      - http:
          path: "diagram/url/upload"
          method: post
          cors: true
          integration: lambda
    package:
      include:
        - diagram_url_upload.py
        - utils.py
  diagram_download:
    handler: diagram_download.lambda_handler
    events:
      - http:
          path: "diagram/download"
          method: get
          cors: true
          integration: lambda
    package:
      include:
        - diagram_download.py
        - utils.py
  diagram_delete:
    handler: diagram_delete.lambda_handler
    events:
      - http:
          path: "diagram/delete"
          method: post
          cors: true
          integration: lambda
    package:
      include:
        - diagram_delete.py
        - utils.py
  diagram_request:
    handler: diagram_request.lambda_handler
    events:
      - http:
          path: "diagram/get"
          method: get
          cors: true
          integration: lambda
    package:
      include:
        - diagram_request.py
        - utils.py
  diagram_generate:
    handler: diagram_generate.lambda_handler
    events:
      - http:
          path: "diagram/generate"
          method: post
          cors: true
          integration: lambda
    package:
      include:
        - diagram_generate.py
        - utils.py